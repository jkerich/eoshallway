package  {	import flash.display.MovieClip;	import flash.events.MouseEvent;	import fl.transitions.Tween;	import flash.text.*;	public class ListElement extends MovieClip{		public var subElements:Array;		public var subElementContainer:MovieClip;		public var expanded:Boolean;		public var tabWidth:Number = 10;		public var origW:Number;		public var origH:Number;						//remove element		public function ListElement(t:String,w:Number,h:Number) {			//init			origW = w;			origH = h;			subElements = new Array();			subElementContainer = new MovieClip();			expanded = true;						//text box			var textLabel:TextField = new TextField();			textLabel.autoSize = TextFieldAutoSize.CENTER;			textLabel.text = t;			textLabel.setTextFormat(new TextFormat("Arial",20,0xFFFFFF));			textLabel.x = w/2 - textLabel.width/2; 			textLabel.y = h/2 - textLabel.height/2;									this.addEventListener(MouseEvent.MOUSE_OVER,hightlight);			this.addEventListener(MouseEvent.MOUSE_OUT,unhightlight);			this.addEventListener(MouseEvent.CLICK,expandToggle);						drawHitBox(w,h,0xFFFFFF,.5);						//add children			subElementContainer.y = h;			this.addChild(subElementContainer);			this.addChild(textLabel);					}		private function hightlight(e:MouseEvent):void {			drawHitBox(origW,origH,0xFFFFFF,.8);		}		private function unhightlight(e:MouseEvent):void {			drawHitBox(origW,origH,0xFFFFFF,.5);		}		private function expandToggle(e:MouseEvent):void {//work on this----------- acess parent			if(mouseY < origH) { //if you click the parent				if(expanded) {					//contract					new Tween(subElementContainer,"scaleY",null,subElementContainer.scaleY,0,.5,true);										//move elements below					for (var i:Number = 0;i<subElements.length;i++) {						if (subElements[i] == e.target) {							trace(e.target);						}					}										expanded = false;				}else if(!expanded) {					//expand					new Tween(subElementContainer,"scaleY",null,subElementContainer.scaleY,1,.5,true);					expanded = true;				}			}					}		public function addSubElement(elem:ListElement):void {			elem.x = tabWidth;			//resize elem			elem.width -= tabWidth; //may need to properly scale in furture			//position			if (subElements.length > 0) {				elem.y = subElements[subElements.length-1].y + subElements[subElements.length-1].height;			}									subElements.push(elem);			subElementContainer.addChild(subElements[subElements.length-1]);		}		private function drawHitBox(w:Number,h:Number,color:uint = 0xFFFFFF,a:Number = 0):void {			this.graphics.clear();			this.graphics.beginFill(color,a);			this.graphics.drawRect(0,0,w,h);			this.graphics.endFill();		}	}	}